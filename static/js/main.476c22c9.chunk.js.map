{"version":3,"sources":["store/types.js","components/ArrowButton.jsx","components/LengthSection.jsx","components/LengthContainer.jsx","store/actions/timerActions.js","components/TimerDisplay.jsx","components/ToggleButton.jsx","components/ResetButton.jsx","components/BottomButtonSection.jsx","components/Audio.jsx","components/PomodoroTimer.jsx","containers/App.jsx","store/reducers/timerReducer.js","store/reducers/index.js","store/index.js","styles/GlobaStyle.jsx","index.js"],"names":["timerTypes","TOGGLE_TIMER","RESET","INCREMENT","DECREMENT","DECREMENT_TIME_LEFT","TOGGLE_AUDIO","Icon","styled","i","ArrowButton","id","direction","onClick","icon","faAngleUp","faAngleDown","size","color","StyledDiv","div","Header","h2","FlexDiv","LengthDiv","LengthSection","label","labelId","length","lengthId","onClickDown","downId","onClickUp","upId","connect","timer","break","session","dispatch","increment","type","payload","decrement","breakLength","h1","TimeDiv","TimerDisplay","props","setDecrementInterval","isRunning","decrementTimeLeft","interval","setInterval","clearDecrementInterval","clearInterval","secondsToTime","time","Math","floor","toString","padStart","this","running","timeLeft","toUpperCase","React","Component","StyledButton","button","css","SpanCover","span","SpanInitial","SpanHover","toggleTimer","reset","audio","document","getElementById","pause","currentTime","faRedo","Flex","BottomButtonSection","Audio","stopAudio","playing","handleAudioEnd","toggleAudio","addEventListener","audioPlaying","play","removeEventListener","audioSource","process","src","preload","isPlaying","PomodoroTimer","App","initialState","handleIncrementDecrement","state","lengthType","newLength","min","max","nextState","timerReducer","includes","undefined","rootReducer","combineReducers","store","createStore","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.476c22c9.chunk.js","sourcesContent":["export const timerTypes = {\n  TOGGLE_TIMER: \"TOGGLE_TIMER\",\n  RESET: \"RESET\",\n  INCREMENT: \"INCREMENT\",\n  DECREMENT: \"DECREMENT\",\n  DECREMENT_TIME_LEFT: \"DECREMENT_TIME_LEFT\",\n  TOGGLE_AUDIO: \"TOGGLE_AUDIO\",\n};\n","import PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleDown, faAngleUp } from \"@fortawesome/free-solid-svg-icons\";\nimport styled from \"styled-components\";\n\nconst Icon = styled.i`\n  display: inline-flex;\n  align-items: center;\n  cursor: pointer;\n`;\n\nconst ArrowButton = ({ id, direction, onClick }) => {\n  let icon = null;\n  if (direction === \"up\") icon = faAngleUp;\n  else if (direction === \"down\") icon = faAngleDown;\n\n  return (\n    <Icon id={id} onClick={onClick}>\n      <FontAwesomeIcon icon={icon} size=\"2x\" color=\"var(--white)\" />\n    </Icon>\n  );\n};\n\nArrowButton.propTypes = {\n  id: PropTypes.string.isRequired,\n  direction: PropTypes.oneOf([\"up\", \"down\"]).isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ArrowButton;\n","import PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nimport ArrowButton from \"./ArrowButton\";\n\nconst StyledDiv = styled.div`\n  text-align: center;\n`;\n\nconst Header = styled.h2`\n  margin: 1rem;\n  font-family: \"Open Sans\", sans-serif;\n  text-decoration: underline;\n`;\n\nconst FlexDiv = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  margin-bottom: 1rem;\n`;\n\nconst LengthDiv = styled.div`\n  font-size: 3rem;\n`;\n\nconst LengthSection = ({\n  label,\n  labelId,\n  length,\n  lengthId,\n  onClickDown,\n  downId,\n  onClickUp,\n  upId,\n}) => {\n  return (\n    <StyledDiv>\n      <Header id={labelId}>{label}</Header>\n      <FlexDiv>\n        <ArrowButton id={downId} direction=\"down\" onClick={onClickDown} />\n        <LengthDiv id={lengthId}>{length}</LengthDiv>\n        <ArrowButton id={upId} direction=\"up\" onClick={onClickUp} />\n      </FlexDiv>\n    </StyledDiv>\n  );\n};\n\nLengthSection.propTypes = {\n  label: PropTypes.string.isRequired,\n  labelId: PropTypes.string.isRequired,\n  length: PropTypes.number.isRequired,\n  lengthId: PropTypes.string.isRequired,\n  onClickDown: PropTypes.func.isRequired,\n  downId: PropTypes.string.isRequired,\n  onClickUp: PropTypes.func.isRequired,\n  upId: PropTypes.string.isRequired,\n};\n\nexport default LengthSection;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\n\nimport { increment, decrement } from \"../store/actions\";\n\nimport LengthSection from \"./LengthSection\";\n\nconst StyledDiv = styled.div`\n  display: flex;\n`;\n\nconst LengthContainer = ({\n  break: breakLength,\n  session,\n  increment,\n  decrement,\n}) => {\n  return (\n    <StyledDiv>\n      <LengthSection\n        label=\"Break Length\"\n        labelId=\"break-label\"\n        length={breakLength}\n        lengthId=\"break-length\"\n        onClickDown={() => decrement(\"break\")}\n        downId=\"break-decrement\"\n        onClickUp={() => increment(\"break\")}\n        upId=\"break-increment\"\n      />\n\n      <LengthSection\n        label=\"Session Length\"\n        labelId=\"session-label\"\n        length={session}\n        lengthId=\"session-length\"\n        onClickDown={() => decrement(\"session\")}\n        downId=\"session-decrement\"\n        onClickUp={() => increment(\"session\")}\n        upId=\"session-increment\"\n      />\n    </StyledDiv>\n  );\n};\n\nconst mapStateToProps = ({ timer }) => {\n  return {\n    break: timer.break,\n    session: timer.session,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    increment(type) {\n      dispatch(increment(type));\n    },\n    decrement(type) {\n      dispatch(decrement(type));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LengthContainer);\n","import { timerTypes } from \"../types\";\n\nexport const increment = type => {\n  return {\n    type: timerTypes.INCREMENT,\n    payload: { type },\n  };\n};\n\nexport const decrement = type => {\n  return {\n    type: timerTypes.DECREMENT,\n    payload: { type },\n  };\n};\n\nexport const toggleTimer = () => {\n  return {\n    type: timerTypes.TOGGLE_TIMER,\n  };\n};\n\nexport const reset = () => {\n  return {\n    type: timerTypes.RESET,\n  };\n};\n\nexport const decrementTimeLeft = () => {\n  return {\n    type: timerTypes.DECREMENT_TIME_LEFT,\n  };\n};\n\nexport const toggleAudio = isPlaying => {\n  return {\n    type: timerTypes.TOGGLE_AUDIO,\n    payload: { isPlaying },\n  };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\n\nimport { decrementTimeLeft } from \"../store/actions\";\n\nconst StyledDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Header = styled.h1`\n  font-family: \"Open Sans\", sans-serif;\n  font-size: 2rem;\n  margin: 4rem 1rem 1rem 1rem;\n  background-color: var(--heading-red-bg);\n  padding: 0.5rem 2rem;\n  border-radius: var(--border-radius);\n`;\n\nconst TimeDiv = styled.div`\n  font-size: 8rem;\n`;\n\nclass TimerDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.interval = null;\n  }\n\n  componentDidUpdate() {\n    this.setDecrementInterval();\n  }\n\n  componentWillUnmount() {\n    this.clearDecrementInterval();\n  }\n\n  setDecrementInterval = () => {\n    const { isRunning, decrementTimeLeft } = this.props;\n\n    if (isRunning && this.interval === null) {\n      this.interval = setInterval(() => {\n        decrementTimeLeft();\n      }, 1000);\n    } else if (!isRunning) {\n      this.clearDecrementInterval();\n    }\n  };\n\n  clearDecrementInterval = () => {\n    clearInterval(this.interval);\n    this.interval = null;\n  };\n\n  secondsToTime = time => {\n    const m = Math.floor(time / 60)\n      .toString()\n      .padStart(2, \"0\");\n    const s = Math.floor(time % 60)\n      .toString()\n      .padStart(2, \"0\");\n\n    return m + \":\" + s;\n  };\n\n  render() {\n    const { running, timeLeft } = this.props;\n    return (\n      <StyledDiv>\n        <Header id=\"timer-label\">{running.toUpperCase()}</Header>\n        <TimeDiv id=\"time-left\">{this.secondsToTime(timeLeft)}</TimeDiv>\n      </StyledDiv>\n    );\n  }\n}\n\nconst mapStateToProps = ({ timer }) => {\n  return {\n    isRunning: timer.isRunning,\n    running: timer.running,\n    timeLeft: timer.timeLeft,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    decrementTimeLeft() {\n      dispatch(decrementTimeLeft());\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TimerDisplay);\n","import { connect } from \"react-redux\";\nimport styled, { css } from \"styled-components\";\n\nimport { toggleTimer } from \"../store/actions\";\n\nconst StyledButton = styled.button`\n  padding: 1rem 0rem;\n  width: 40%;\n  text-align: center;\n  background-color: var(--white);\n  color: var(--red);\n  font-size: 2rem;\n  border-radius: var(--border-radius);\n  border: medium none;\n  box-sizing: border-box;\n  margin: 1rem 1rem 1.6rem 1rem;\n  border: 2px solid var(--white);\n  overflow: hidden;\n  position: relative;\n  display: block;\n  cursor: pointer;\n\n  :after {\n    background-color: var(--light-red);\n    content: \"\";\n    display: block;\n    height: 100%;\n    width: 100%;\n    left: 0;\n    top: 0;\n    position: absolute;\n    transform: translateX(-150%) skewX(45deg);\n    transition: transform 0.5s var(--cubic-bezier);\n    z-index: 0;\n    box-sizing: border-box;\n    margin: 0;\n  }\n\n  ${({ isRunning }) => {\n    if (isRunning) {\n      return css`\n        transform: translateY(6px);\n      `;\n    } else {\n      return \"box-shadow: var(--white-shadow) 0px 6px 0px;\";\n    }\n  }}\n\n  :hover {\n    :after {\n      transform: translateX(0) skew(0);\n    }\n  }\n\n  :hover span span {\n    transform: translateY(-100%);\n  }\n\n  :hover span span + span {\n    transform: translateY(0%);\n  }\n`;\n\nconst SpanCover = styled.span`\n  position: relative;\n  z-index: 1;\n  overflow: hidden;\n  display: block;\n`;\n\nconst SpanInitial = styled.span`\n  transition: transform 0.3s var(--cubic-bezier);\n  display: block;\n  position: relative;\n`;\n\nconst SpanHover = styled.span`\n  bottom: 0;\n  color: var(--white);\n  left: 0;\n  position: absolute;\n  right: 0;\n  top: 0;\n  transform: translateY(100%);\n  transition: transform 0.3s var(--cubic-bezier);\n  display: block;\n`;\n\nconst ToggleButton = ({ isRunning, toggleTimer }) => {\n  return (\n    <StyledButton id=\"start_stop\" onClick={toggleTimer} isRunning={isRunning}>\n      <SpanCover>\n        <SpanInitial>{isRunning ? \"STOP\" : \"START\"}</SpanInitial>\n        <SpanHover>{isRunning ? \"STOP\" : \"START\"}</SpanHover>\n      </SpanCover>\n    </StyledButton>\n  );\n};\n\nconst mapStateToProps = ({ timer }) => {\n  return {\n    isRunning: timer.isRunning,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleTimer() {\n      dispatch(toggleTimer());\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ToggleButton);\n","import { connect } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faRedo } from \"@fortawesome/free-solid-svg-icons\";\nimport styled from \"styled-components\";\n\nimport { reset } from \"../store/actions\";\n\nconst Icon = styled.i`\n  font-size: 1.2rem;\n  padding: 1rem;\n  margin: 0.5rem;\n  display: inline-flex;\n  align-items: center;\n  cursor: pointer;\n  transition: transform 0.3s ease-in;\n\n  :hover {\n    animation-name: rotate;\n    animation-duration: 0.8s;\n    animation-iteration-count: infinite;\n    animation-timing-function: var(--cubic-bezier);\n  }\n\n  @keyframes rotate {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nconst ResetButton = ({ reset }) => {\n  return (\n    <Icon\n      id=\"reset\"\n      onClick={() => {\n        const audio = document.getElementById(\"beep\");\n        audio.pause();\n        audio.currentTime = 0;\n        reset();\n      }}\n    >\n      <FontAwesomeIcon\n        id=\"reset\"\n        icon={faRedo}\n        size=\"2x\"\n        color=\"var(--white)\"\n      />\n    </Icon>\n  );\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    reset() {\n      dispatch(reset());\n    },\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ResetButton);\n","import styled from \"styled-components\";\n\nimport ToggleButton from \"./ToggleButton\";\nimport ResetButton from \"./ResetButton\";\n\nconst Flex = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst BottomButtonSection = () => {\n  return (\n    <Flex>\n      <ToggleButton />\n      <ResetButton />\n    </Flex>\n  );\n};\n\nexport default BottomButtonSection;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { toggleAudio } from \"../store/actions\";\n\nclass Audio extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.audio = null;\n    this.playing = false;\n  }\n\n  componentDidMount() {\n    if (this.audio === null) {\n      this.audio = document.getElementById(\"beep\");\n      this.audio.addEventListener(\"ended\", this.handleAudioEnd);\n    }\n  }\n\n  componentDidUpdate() {\n    const { audioPlaying } = this.props;\n    if (audioPlaying && !this.playing) {\n      this.audio.play();\n    }\n  }\n\n  componentWillUnmount() {\n    this.audio.removeEventListener(\"ended\", this.handleAudioEnd);\n  }\n\n  stopAudio = () => {\n    this.audio.pause();\n    this.audio.currentTime = 0;\n    this.playing = false;\n  };\n\n  handleAudioEnd = () => {\n    this.stopAudio();\n    this.props.toggleAudio(false);\n  };\n\n  render() {\n    const audioSource = `${process.env.PUBLIC_URL}/audio/beep.wav`;\n    return (\n      <audio\n        id=\"beep\"\n        src={audioSource}\n        type=\"audio/wav\"\n        preload=\"auto\"\n      ></audio>\n    );\n  }\n}\n\nconst mapStateToProps = ({ timer }) => {\n  return {\n    audioPlaying: timer.audioPlaying,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleAudio(isPlaying) {\n      dispatch(toggleAudio(isPlaying));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Audio);\n","import styled from \"styled-components\";\n\nimport LengthContainer from \"./LengthContainer\";\nimport TimerDisplay from \"./TimerDisplay\";\nimport BottomButtonSection from \"./BottomButtonSection\";\nimport Audio from \"./Audio\";\n\nconst StyledDiv = styled.div`\n  background-color: var(--light-red);\n  border-radius: var(--border-radius);\n`;\n\nconst PomodoroTimer = () => {\n  return (\n    <StyledDiv>\n      <LengthContainer />\n      <TimerDisplay />\n      <BottomButtonSection />\n      <Audio />\n    </StyledDiv>\n  );\n};\n\nexport default PomodoroTimer;\n","import styled from \"styled-components\";\n\nimport PomodoroTimer from \"../components/PomodoroTimer\";\n\nconst StyledDiv = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: var(--red);\n  width: 100%;\n  height: 100%;\n`;\n\nconst App = () => {\n  return (\n    <div>\n      <StyledDiv>\n        <PomodoroTimer />\n      </StyledDiv>\n    </div>\n  );\n};\n\nexport default App;\n","import { timerTypes } from \"../types\";\n\nconst initialState = {\n  break: 5,\n  session: 25,\n  timeLeft: 1500,\n  isRunning: false,\n  running: \"session\",\n  audioPlaying: false,\n};\n\nconst timerReducer = (state = initialState, { type, payload }) => {\n  if ([timerTypes.INCREMENT, timerTypes.DECREMENT].includes(type)) {\n    return handleIncrementDecrement(state, type, payload);\n  }\n\n  switch (type) {\n    case timerTypes.TOGGLE_TIMER:\n      return { ...state, isRunning: !state.isRunning };\n    case timerTypes.RESET:\n      return initialState;\n    case timerTypes.DECREMENT_TIME_LEFT:\n      let { timeLeft, running, audioPlaying } = state;\n      timeLeft = state.timeLeft - 1;\n\n      if (timeLeft < 0) {\n        if (running === \"session\") running = \"break\";\n        else if (running === \"break\") running = \"session\";\n\n        timeLeft = state[running] * 60;\n        audioPlaying = true;\n      }\n\n      return { ...state, timeLeft, running, audioPlaying };\n    case timerTypes.TOGGLE_AUDIO:\n      const { isPlaying } = payload;\n\n      let playing = !state.audioPlaying;\n\n      if (isPlaying !== undefined) {\n        playing = isPlaying;\n      }\n\n      return { ...state, audioPlaying: playing };\n    default:\n      return state;\n  }\n};\n\nconst handleIncrementDecrement = (state, type, payload) => {\n  const lengthType = payload.type;\n  let { timeLeft } = state;\n  const { isRunning, running } = state;\n\n  if (isRunning) return state;\n\n  let newLength = 0;\n  if (type === timerTypes.INCREMENT) {\n    newLength = Math.min(state[lengthType] + 1, 60);\n  } else if (type === timerTypes.DECREMENT) {\n    newLength = Math.max(state[lengthType] - 1, 1);\n  }\n\n  if (!isRunning && running === lengthType) {\n    timeLeft = newLength * 60;\n  }\n\n  const nextState = { ...state, timeLeft };\n  nextState[lengthType] = newLength;\n\n  return nextState;\n};\n\nexport default timerReducer;\n","import { combineReducers } from \"redux\";\nimport timerReducer from \"./timerReducer\";\n\nconst rootReducer = combineReducers({ timer: timerReducer });\n\nexport default rootReducer;\n","import { createStore } from \"redux\";\n\nimport rootReducer from \"./reducers\";\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  :root {\n    /* Variables */\n    --white: #eeeeee;\n    --white-shadow: rgb(205, 205, 205);\n    --white-hover: rgb(235, 235, 235);\n    --red: #ec4546;\n    --heading-red-bg: #cc4d4c;\n    --light-red: #ef5a5a;\n    --border-radius: 4px;\n    --cubic-bezier: cubic-bezier(0.215, 0.61, 0.355, 1);\n\n    font-size: 62.5%;\n  }\n\n  html, body, #root, #root>div {\n    height: 100%\n  }\n\n  body {\n    margin: 0;\n    font-size: 1.6rem;\n    font-family: \"Roboto\", sans-serif;\n    color: var(--white);\n  }\n`;\n\nexport default GlobalStyle;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./containers/App\";\n\nimport store from \"./store\";\n\nimport GlobalStyle from \"./styles/GlobaStyle\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <GlobalStyle />\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}